@using Syncfusion.Blazor.Grids
@using AIS.Data.RequestResponseModel.Expense;
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.DropDowns;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.LinearGauge
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.Popups


@page "/User_Pages/Expense/ExpenseDetails"

@inherits ExpenseDetailsBase

@{
    var InitSearch2 = (new string[] { "organizationName" });
    var Tool = (new List<string>() { "Search" });
    
}

<MudGrid>
    <MudItem xs="12" sm="12" md="8">
        <SfDashboardLayout CellSpacing="@(new double[]{20 ,20 })" Columns="7" CellAspectRatio="2" AllowResizing="true">
            <DashboardLayoutPanels>
                <DashboardLayoutPanel SizeX=7 SizeY="2">
                    <HeaderTemplate>Expence Details</HeaderTemplate>
                    <ContentTemplate>
                        <SfGrid DataSource="@expenseList"
                                EnableVirtualMaskRow="true"
                                RowHeight="38" Height="710"
                                Width="auto" EnableVirtualization="false"
                                AllowResizing="true" AllowExcelExport="true"
                                EnableAutoFill="true" AllowReordering="true"
                                ShowColumnChooser="true" AllowGrouping="true" AllowSorting="true"
                                AllowFiltering="true" AllowPaging="true" ShowColumnMenu="true"
                                ContextMenuItems="MenuItems"
                        @ref="sfExpenseDetails"
                                Toolbar="classMasterItem">
                            <GridFilterSettings Type="@Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                            <GridPageSettings PageCount="20" PageSizes="true"></GridPageSettings>                           
                            <GridGroupSettings Columns="@GroupedColumns"></GridGroupSettings>
                            <GridAggregates>
                                <GridAggregate>
                                    <GridAggregateColumns>
                                        
                                        <GridAggregateColumn Field=@nameof(ExpenseDetailListModel.paidAmount) Type="AggregateType.Sum">
                                            <GroupFooterTemplate>
                                                @{
                                                    var Unit = (context as AggregateTemplateContext);
                                                    <div>
                                                      Total Expence:@Unit.Sum
                                                    </div>
                                                }
                                            </GroupFooterTemplate>
                                        </GridAggregateColumn>
                                    </GridAggregateColumns>
                                </GridAggregate>
                            </GridAggregates>
                            <GridEvents CommandClicked="EditExpenseDetail" OnToolbarClick="ToolbarClickHandler" TValue="ExpenseDetailListModel"></GridEvents>
                            <GridSearchSettings Fields=@InitSearch2 Operator=Syncfusion.Blazor.Operator.Contains Key=""
                                                IgnoreCase="true"></GridSearchSettings>
                            <GridColumns>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.expenceID) HeaderText="ID" TextAlign="TextAlign.Right"  AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.organizationName) HeaderText="Organization Name" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.contactName) HeaderText="Contact Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.accountType) HeaderText="Account Type" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.invoiceNo) HeaderText="Invoice No" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.paymentDetails) HeaderText="Payment Mode" TextAlign="TextAlign.Right" AllowGrouping=true AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.bankName) HeaderText="Bank Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.chequeNo) HeaderText="Cheque No" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.baranchName) HeaderText="Branch Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.tranDate) HeaderText="Tran Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.description) HeaderText="Description" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.paidAmount) HeaderText="Paid Amount" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>

                                <GridColumn HeaderText="Action" Width="20" AutoFit="true" TextAlign="TextAlign.Center">
                                    <GridCommandColumns>
                                        <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { Content="Edit", IconCss = "e-icons e-edit e-primary e-outline", CssClass = "e-flat e-info e-outline" })"></GridCommandColumn>
                                        <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { Content = "Delete",IconCss = "e-icons e-delete e-primary e-outline", CssClass = "e-flat e-danger e-outline"  })"></GridCommandColumn>
                                    </GridCommandColumns>
                                </GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.createdByUser) HeaderText="Created User" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.createdDate) HeaderText="Created Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                @* <GridColumn Field=@nameof(ExpenseDetailListModel.updatedByUser) HeaderText="Updated User" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                <GridColumn Field=@nameof(ExpenseDetailListModel.updatedDate) HeaderText="Updated Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn> *@

                            </GridColumns>
                        </SfGrid>
                    </ContentTemplate>
                </DashboardLayoutPanel>
            </DashboardLayoutPanels>
        </SfDashboardLayout>
    </MudItem>
</MudGrid>


<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudItem xs="12" sm="12" md="12">
            <SfDialog @ref="@DialogRef" Width="1450px" AllowDragging="true" IsModal="true" ShowCloseIcon="true" @bind-Visible="@IsVisible">
                <DialogEvents OnOpen="onOpen"></DialogEvents>
                <DialogTemplates>
                    <Header>@DialogHeaderName </Header>
                    <Content>
                        <MudGrid>
                            <MudItem xs="12" md="6" sm="12">
                                <EditForm Model="_expenseDetailViewModel" OnValidSubmit="OnValidSubmit">
                                    <DataAnnotationsValidator />
                                    <MudCardContent>
                                        <MudGrid>

                                            <MudItem xs="12" md="6" sm="6">
                                                     <SfDropDownList ID="ClassId" TValue="string" TItem="VenderMasterListModel"
                                                    CssClass="e-outline" Placeholder="Select a Account Name"
                                                    FloatLabelType="@FloatLabelType.Never" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                                    AllowFiltering="true"
                                                @bind-Value="@_expenseDetailViewModel.AccountID"
                                                    DataSource="@venderMasterList">
                                                    <DropDownListFieldSettings Text="organizationName" Value="accountID" />
                                                    <DropDownListEvents TItem="VenderMasterListModel" TValue="string"
                                                                        ValueChange="OnChangeAccount" />
                                                    <ValidationMessage For="() => _expenseDetailViewModel.AccountID" />
                                                    </SfDropDownList>
                                            </MudItem>
                                                @* <MudItem xs="12" md="6" sm="6">

                                                <SfDropDownList @ref="ddlObj" AllowFiltering="true" 
                                                    
                                                                TValue="VenderMasterListModel"
                                                                Placeholder="Select a Account Type" 
                                                                TItem="VenderMasterListModel" PopupHeight="200px"  Width="300px"
                                                                DataSource="@venderMasterList" CssClass="e-multi-column">
                                             
                                                    <DropDownListFieldSettings Text="organizationName" Value="venderID"></DropDownListFieldSettings>
                                                    <DropDownListEvents Filtering="OnFiltering" TValue="VenderMasterListModel" TItem="VenderMasterListModel"></DropDownListEvents>
                                                    <DropDownListTemplates TItem="VenderMasterListModel">
                                                        <HeaderTemplate>
                                                            <table><tr><th>Organization Name</th><th>Account Name</th></tr></table>
                                                        </HeaderTemplate>
                                                        <ItemTemplate Context="itemContext">
                                                            <table>
                                                                <tbody>
                                                                    <tr>
                                                                        @if (!string.IsNullOrEmpty((itemContext as VenderMasterListModel).organizationName))
                                                                        {
                                                                            <td><span>@((itemContext as VenderMasterListModel).organizationName)</span></td>
                                                                            <td><span>@((itemContext as VenderMasterListModel).contactName)</span></td>
                                                                        }
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </ItemTemplate>
                                                    </DropDownListTemplates>
                                                </SfDropDownList>
                                                

                                            </MudItem>*@
                                            <MudItem xs="12" md="6" sm="6">
                                                <SfTextBox CssClass="e-outline" Placeholder="Invoice No" Type="Syncfusion.Blazor.Inputs.InputType.Text"
                                                @bind-Value="@_expenseDetailViewModel.InvoiceNo"
                                                           FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.InvoiceNo" />
                                            </MudItem>
                                            <MudItem xs="12" md="6" sm="6">
                                                 

                                                <SfDropDownList ID="ClassId" TValue="string" TItem="PaymentMode"
                                                                CssClass="e-outline" Placeholder="Select a Payment Type"
                                                                FloatLabelType="@FloatLabelType.Never" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                                                AllowFiltering="true"
                                                @bind-Value="@_expenseDetailViewModel.PaymentMode"
                                                                DataSource="@PaymentModes">
                                                    <DropDownListFieldSettings Text="PaymentType" Value="PaymentID" />
                                                    <ValidationMessage For="() => _expenseDetailViewModel.PaymentMode" />
                                                </SfDropDownList>


                                            </MudItem>
                                            <MudItem xs="12" md="6" sm="6">
                                                <SfTextBox CssClass="e-outline" Placeholder="Bank Name" Type="Syncfusion.Blazor.Inputs.InputType.Text"
                                                @bind-Value="@_expenseDetailViewModel.BankName"
                                                           FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.BankName" />
                                            </MudItem>
                                           

                                            <MudItem xs="12" md="6" sm="6">
                                                <SfTextBox CssClass="e-outline" Placeholder="Cheque No" Type="Syncfusion.Blazor.Inputs.InputType.Text"
                                                @bind-Value="@_expenseDetailViewModel.ChequeNo"
                                                           FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.ChequeNo" />
                                            </MudItem>

                                            <MudItem xs="12" md="6" sm="6">
                                                <SfTextBox CssClass="e-outline" Placeholder="Baranch Name" Type="Syncfusion.Blazor.Inputs.InputType.Text"
                                                @bind-Value="@_expenseDetailViewModel.BaranchName"
                                                           FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.BaranchName" />

                                            </MudItem> 
                                            <MudItem xs="12" md="12" sm="12">
                                                <SfTextBox CssClass="e-outline" Placeholder="Expense Description" Multiline=true Type="Syncfusion.Blazor.Inputs.InputType.Text"
                                                @bind-Value="@_expenseDetailViewModel.Description"
                                                           FloatLabelType="@FloatLabelType.Never"></SfTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.Description" />
                                            </MudItem>
                                            <MudItem xs="12" md="6" sm="6">
                                              

                                                <SfDatePicker TValue="DateTime?" Value="@DateValue">
                                                    <DatePickerEvents TValue="DateTime?" ValueChange="@onChange"></DatePickerEvents>
                                                </SfDatePicker>
                                            </MudItem>

                                            <MudItem xs="12" md="6" sm="6">
                                                <SfNumericTextBox CssClass="e-outline" Placeholder="Paid Amount" Type="Syncfusion.Blazor.Inputs.InputType.number"
                                                @bind-Value="@_expenseDetailViewModel.PaidAmount"
                                                           FloatLabelType="@FloatLabelType.Never"></SfNumericTextBox>
                                                <ValidationMessage For="() => _expenseDetailViewModel.PaidAmount" />
                                            </MudItem>

                                            <MudItem xs="12" md="6" sm="6">
                                                <SfButton CssClass=@btncss type="submit" IsPrimary="true">@HeaderText</SfButton>
                                                @*<SfButton CssClass="e-outline" OnClick="@CloseDialog">Cancel</SfButton>*@
                                                <SfButton Type="button" CssClass="e-flat" IsToggle="false " IsPrimary="false" Content="Cancel" OnClick="@CloseDialog"></SfButton>
                                            </MudItem>
                                        </MudGrid>
                                    </MudCardContent>
                                </EditForm>
                            </MudItem>
                            <MudItem xs="12" md="6" sm="12">
                                <SfGrid DataSource="@accountExpenseList"
                                        EnableVirtualMaskRow="true"
                                        RowHeight="38" Height="410"
                                        Width="auto" EnableVirtualization="false"
                                        AllowResizing="true" AllowExcelExport="true"
                                        EnableAutoFill="true" AllowReordering="true"
                                        ShowColumnChooser="true" AllowGrouping="false" AllowSorting="true"
                                        AllowFiltering="true" AllowPaging="true" ShowColumnMenu="true"
                                        ContextMenuItems="MenuItems"
                                @ref="sfExpenseDetails"
                                        Toolbar="classMasterItem">
                                    <GridFilterSettings Type="@Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                    <GridPageSettings PageCount="20" PageSizes="true"></GridPageSettings>
                                    @* <GridGroupSettings Columns="@InitialGroupColumn"></GridGroupSettings>*@
                                    @* <GridGroupSettings Columns=@InitialGroupColumn>
                                    <CaptionTemplate>
                                    @{
                                    var UnitDetails = (context as CaptionTemplateContext);
                                    <div>@UnitDetails.Field - @UnitDetails.Key</div>
                                    }
                                    </CaptionTemplate>
                                    </GridGroupSettings>*@

                                    <GridEvents CommandClicked="EditExpenseDetail" OnToolbarClick="ToolbarClickHandler" TValue="ExpenseDetailListModel"></GridEvents>
                                    <GridSearchSettings Fields=@InitSearch2 Operator=Syncfusion.Blazor.Operator.Contains Key=""
                                                        IgnoreCase="true"></GridSearchSettings>
                                    <GridColumns>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.expenceID) HeaderText="ID" TextAlign="TextAlign.Right" AllowGrouping=true AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.organizationName) HeaderText="Organization Name" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.contactName) HeaderText="Contact Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.accountType) HeaderText="Account Type" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.invoiceNo) HeaderText="Invoice No" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.paymentDetails) HeaderText="Payment Mode" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.bankName) HeaderText="Bank Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.chequeNo) HeaderText="Cheque No" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.baranchName) HeaderText="Branch Name" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.tranDate) HeaderText="Tran Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.description) HeaderText="Description" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.paidAmount) HeaderText="Paid Amount" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>

                                        <GridColumn HeaderText="Action" Width="20" AutoFit="true" TextAlign="TextAlign.Center">
                                            <GridCommandColumns>
                                                <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { Content="Edit", IconCss = "e-icons e-edit e-primary e-outline", CssClass = "e-flat e-info e-outline" })"></GridCommandColumn>
                                                <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions() { Content = "Delete",IconCss = "e-icons e-delete e-primary e-outline", CssClass = "e-flat e-danger e-outline"  })"></GridCommandColumn>
                                            </GridCommandColumns>
                                        </GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.createdByUser) HeaderText="Created User" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.createdDate) HeaderText="Created Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.updatedByUser) HeaderText="Updated User" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>
                                        <GridColumn Field=@nameof(ExpenseDetailListModel.updatedDate) HeaderText="Updated Date" TextAlign="TextAlign.Right" AutoFit=true></GridColumn>

                                    </GridColumns>
                                </SfGrid>

                            </MudItem>
                        </MudGrid>

                    </Content>
                </DialogTemplates>
                <DialogAnimationSettings Delay="400" Effect="DialogEffect.FlipLeftUp">
                </DialogAnimationSettings>
                <DialogPositionData X="@Xvalue" Y="@Yvalue"></DialogPositionData>
            </SfDialog>
        </MudItem>
    </MudItem>
</MudGrid>
@code {
    private string Xvalue = "center";
    private string Yvalue = "center";
}
<style>
    .e-toolbar-item .e-tbar-btn {
        background-color: orange;
    }

    .e-grid .e-rowcell.e-selectionbackground {
        background-color: darkgrey !important;
    }

    .e-popup-full-page .e-popup-full-page.e-ddl.e-popup.e-ddl-device-filter {
        z-index: 10005;
    }

    .e-dialog .e-dlg-header {
        color: cornflowerblue;
        font-size: 20px;
        font-weight: normal;
    }



    /* html,
    body,
    #container {
        height: 100%;
        overflow: hidden;
        width: 100%;
        position: relative;
        min-height: 400px;
    }

    .text {
        text-transform: capitalize;
    }

    #customization {
        display: table;
        margin: 0 auto;
    }

    .animate {
        display: table-cell;
        padding-left: 20px;
    }

    @@media only screen and (max-width: 360px) {
        #customization {
            display: inline-block;
            margin: 0 auto;
            text-align: center;
        }

        .animate {
            display: inline-block;
            padding: 10px;
        }
    } */
    /*  .e-rowcell.e-attr {
                                background-color: lightgrey;
                            }*/

    /* .e-popup-full-page .e-popup-full-page.e-ddl.e-popup.e-ddl-device-filter {
                                position: fixed;
                            }*/

    /*

                            .e-tab .e-tab-header:not(.e-vertical) .e-indicator, .e-tab .e-tab-header.e-vertical .e-indicator {
                                transition: none;
                            }*/
    /*.e-content .e-item {
                                font-size: 12px;
                                padding: 10px;
                                text-align: justify;
                            }*/
</style>