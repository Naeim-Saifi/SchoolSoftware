
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using System.IO
@page "/Student/StudentAddProfilePicture"
<SfGrid DataSource="@Orders" AllowPaging="true" AllowSelection="true" AllowSorting="true" AllowFiltering="true" EnableVirtualization="true"
        Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "Search","Print","ExcelExport","PdfExport" })"
        AllowExcelExport="true" AllowPdfExport="true" AllowTextWrap="true">
    <GridEvents OnActionBegin="BeginHandler" TValue="Order"></GridEvents>
    <GridEditSettings AllowEditing="true" AllowDeleting="true" AllowAdding="true" Mode="EditMode.Dialog">
        @* <Template>
                @{
                    var Order = (context as Order);
                    <div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="e-float-text e-label-top">Order ID</label>
                                <SfNumericTextBox ID="OrderID" @bind-Value="@(Order.OrderID)" Enabled="@((Order.OrderID == null) ? true : false)"></SfNumericTextBox>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="e-float-text e-label-top">Freight</label>
                                <SfNumericTextBox ID="Freight" @bind-Value="@(Order.Freight)" TValue="double?"></SfNumericTextBox>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <SfUploader ID="uploadFiles" AllowedExtensions=".jpg,.png,.jpeg" Multiple="false">
                                    <UploaderEvents FileSelected="Selected" ValueChange="OnChange"></UploaderEvents>
                                </SfUploader>
                            </div>
                        </div>
                    </div>
                }
            </Template>*@
    </GridEditSettings>
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="@TextAlign.Center" Width="140"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" EditType="EditType.NumericEdit" Format="C2" Width="140" TextAlign="@TextAlign.Right"></GridColumn>
        <GridColumn Field="Imagesrc" HeaderText="Customer Name" Width="200">
            <Template>
                @{
                    var imageUrl = (context as Order).Imagesrc;
                    <div class="image">
                        <img src="@imageUrl" />
                    </div>
                }
            </Template>
            <EditTemplate>
                <SfUploader ID="uploadFiles" AllowedExtensions=".jpg,.png,.jpeg" Multiple="false">
                    <UploaderEvents FileSelected="Selected" ValueChange="OnChange"></UploaderEvents>
                </SfUploader>
            </EditTemplate>
        </GridColumn>
    </GridColumns>
</SfGrid>
<style>
    .image img {
        height: 70px;
        width: 60px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>

@code{
    public int? DefaultValue = 100;
    public string UploadedFile { get; set; }
    public void BeginHandler(ActionEventArgs<Order> Args)
    {
        if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save && Args.Action == "Add")
        {
            //Args.Data.OrderID = DefaultValue++;    //set the default value while adding.
            //save the file name / url in grid datasource. You can generate the byte and store here.
            Args.Data.Imagesrc = "scripts/Images/Employees/" + UploadedFile;
        }
        else if (Args.RequestType == Syncfusion.Blazor.Grids.Action.Save && Args.Action == "Edit")
        {
            //save the file name / url in grid datasource. You can generate the byte and store here.
            Args.Data.Imagesrc = "scripts/Images/Employees/" + UploadedFile;
        }

    }
    public void Selected(SelectedEventArgs Args)
    {
        UploadedFile = Args.FilesData[0].Name;
    }

    public void OnChange(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            var size = file.FileInfo.Size;
            var path = @"./wwwroot/scripts/Images/Employees/" + file.FileInfo.Name;
            ////var path = @"D:\Blazor-New\Support\I313934\BlazorApp1\BlazorApp1\wwwroot\scripts\Images\Employees\" + file.FileInfo.Name;
            FileStream filestream = new FileStream(path, FileMode.Create, FileAccess.Write);
            file.Stream.WriteTo(filestream);
            filestream.Close();
            file.Stream.Close();
        }
    }
    public List<Order> Orders { get; set; }
    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 9).Select(x => new Order()
        {
            OrderID = 1000 + x,
            EmployeeID = x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Imagesrc = "scripts/Images/Employees/" + x + ".png",
            Freight = 2.1 * x,
            OrderDate = DateTime.Now.AddDays(-x),
        }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public int EmployeeID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public string Imagesrc { get; set; }
        public double? Freight { get; set; }
    }
}
