@page  "/RND/Checkbox_Grid"

<h3>Checkbox_Grid</h3>
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids

<span> The selected row index is : @SelectedValue </span>
<SfGrid DataSource="@Orders" AllowSelection="true" AllowPaging="true">
  @*   <GridSelectionSettings Type="SelectionType.Multiple"></GridSelectionSettings> *@
    <GridEvents RowSelected="GetSelectedRecords" TValue="Order"></GridEvents>
    <GridColumns>
        <GridColumn Type="ColumnType.CheckBox" Width="50"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
    </GridColumns>
</SfGrid>

@code{

    SfGrid<Order> Grid;
    public List<Order> Orders { get; set; }
    public List<double> SelectedRowIndexes { get; set; }
    public double[] TotalValue { get; set; }
    public string SelectedValue;

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order()
        {
            OrderID = 1000 + x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Freight = 2.1 * x,
            OrderDate = DateTime.Now.AddDays(-x),
        }).ToList();
    }

    public async Task GetSelectedRecords(RowSelectEventArgs<Order> args)
    {
        SelectedRowIndexes = await this.Grid.GetSelectedRowIndexes();
        TotalValue = SelectedRowIndexes.ToArray();
        SelectedValue = "";
        foreach (var data in TotalValue)
        {
            SelectedValue = SelectedValue + " " + data;
        }
        StateHasChanged();

    }

    public class Order
    {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
    }
}

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Data
@using MudBlazor

@using System.ComponentModel.DataAnnotations;

<MudGrid>
    <MudItem xs="12">
        <SfDialog Width="650px" AllowDragging="true" IsModal="false" ShowCloseIcon="true" @bind-Visible="@IsVisible">
            <DialogTemplates>
                <Header>Time Table Setup </Header>
                <Content>
                    <MudItem xs="12" md="12" sm="3">
                        <EditForm Model="@model">
                            <DataAnnotationsValidator />
                            <MudCardContent>
                                <MudGrid>
                                    <MudItem xs="12" md="6" sm="3">
                                        <SfDropDownList AllowFiltering=true TValue="string" TItem="Countries" CssClass="" Placeholder="Select a Class"
                                                        FloatLabelType="@FloatLabelType.Never" DataSource="@Country" @bind-Value="@model.Code">
                                            <DropDownListFieldSettings Text="Name" Value="Code"></DropDownListFieldSettings>
                                        </SfDropDownList>
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                        </EditForm>
                    </MudItem>
                </Content>
            </DialogTemplates>
        </SfDialog>

    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=6</MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=6</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">xs=3</MudPaper>
    </MudItem>
</MudGrid>


@code {
    public bool IsVisible { get; set; } = true;
    public class CountriesModel
    {
        [Required]
        public string Code { get; set; }
    }
    public CountriesModel model = new CountriesModel();

    public class Countries
    {
        public int Name { get; set; }
        public string Code { get; set; }
    }
    List<Countries> Country = new List<Countries>
{
        new Countries() { Name = 1, Code = "AU" },
        new Countries() { Name = 2, Code = "BM" },
        new Countries() { Name = 3, Code = "CA" },
        new Countries() { Name = 4, Code = "CM" },
        new Countries() { Name = 5, Code = "DK" },
        new Countries() { Name = 6, Code = "FR" },
        new Countries() { Name = 7, Code = "FI" },
        new Countries() { Name = 8, Code = "DE" }
    };
}